'''
    Sprint 1
    Modelagem Matemática da Geração de Energia Solar: Funções Polinomiais e Regressão Linear Aplicadas a Dados Reais (GoodWe)
'''

import pandas as pd
import numpy as np

# Dados Ajustados
data = {
    "Month": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    "Day": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    "Hour": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
    "AC System Output (kW)": [220.47, 652.52, 1074.517, 1411.866, 1075.944, 1156.144, 1179.673, 1183.623, 1033.932, 815.447, 560.734, 272.858, 13.504]
}
# Criação do DataFrame
df = pd.DataFrame(data)
#Exibindo Tabela
print(f"{df}\n")

# Horas do Dia
horas = np.array([6,7,8,9,10,11,12,13,14,15,16,17,18])

# Geração de Energia Correspondente (KiloWatts)
energia = np.array([220.47, 652.52, 1074.517, 1411.866, 1075.944,
                    1156.144, 1179.673, 1183.623, 1033.932,
                    815.447, 560.734, 272.858, 13.504])

# Ajuste do Polinômio de grau 2
coef = np.polyfit(horas, energia, 2) # coef[0] = a, coef[1] = b, coef[2] = c
polinomio = np.poly1d(coef)

# Exibindo a Função Polinomial de Grau 2
print("Função Ajustada:")
print(f"E(t) = {coef[0]:.4f}*t² + {coef[1]:.4f}*t + {coef[2]:.4f}")
